##########################################################
# Simple cell relaxation CUBIC CELL
##########################################################

units           real
newton          on
dimension       3
boundary        p p p                  # periodic boundary conditions (f ? aperiodic/ p - periodic)
atom_style    full               # Define what style of atoms to use in a simulation. http://lammps.sandia.gov/doc/atom_style.html


read_data 1559.coo                               # from where coordinates are read                                      
include forcefield.TIP4P-2005


neighbor 2.0 nsq
neigh_modify  every 1 delay 0 check yes         # When the neighbours list will be updated http://lammps.sandia.gov/doc/neigh_modify.html

compute 	_rg all gyration                              # All atoms will be involved in the simulation http://lammps.sandia.gov/doc/compute.html 
#---------------------------------------


min_style 	cg                                                      # The algoritm of relaxation             
min_modify 	line quadratic                        # The parameters of minimzation algoritm 
fix 1 all box/relax iso 1000.0  dilate partial                  # Cell relaxation  
                                                                                           
dump 		1 all atom 50 out.xyz                      # Record animation every 50 steps  

dump_modify	1 sort id append yes

#----------- geometry optimization----------------------

minimize        1.0e-16 1.0e-8 15000 30000       # Perform an energy minimization of the system http://lammps.sandia.gov/doc/minimize.html  

##########################################################
# Writing Output Enthalpy and Cell Parameters.  
##########################################################
variable h equal enthalpy
print "enthalpy"
print "$h"
variable v equal vol
print "volume"
print "$v"
variable e equal etotal
print "energy"
print "$e"
variable a equal cellalpha
variable b equal cellbeta
variable o equal cellgamma
variable g equal cella
variable f equal cellb
variable y equal cellc
print "Lattice parameters"
variable a1 equal $g
print "${a1} 0.00  0.00"
variable b1 equal $h*cos($o*PI/180)
variable b2 equal $h*sin($o*PI/180)
print "${b1} ${b2}  0.00"
variable c1 equal $y*cos($b*PI/180)
variable c2 equal $y*(cos($a*PI/180)-cos($b*PI/180)*cos($o*PI/180))/sin($o*PI/180)
variable c3 equal $y*sqrt(1+2*cos($a*PI/180)*cos($b*PI/180)*cos($o*PI/180)-cos($a*PI/180)^2-cos($b*PI/180)^2-cos($o*PI/180)^2)/sin($o*PI/180)
print "${c1}  ${c2}  ${c3}"

python output input 9 v_h v_v v_e v_a v_b v_o v_g v_f v_y format fffffffff here """
def output(h,v,e,alpha,beta,gamma,a,b,c):
    file = open('./cell.param','w+')
    file.write(str(h)+'\n')
    file.write(str(v)+'\n')
    file.write(str(e)+'\n')
    file.write(str(alpha)+'\n')
    file.write(str(beta)+'\n')
    file.write(str(gamma)+'\n')
    file.write(str(a)+'\n')
    file.write(str(b)+'\n')
    file.write(str(c))
"""
python output invoke
#---------------------------------------
